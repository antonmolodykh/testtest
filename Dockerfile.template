FROM resin/%%RESIN_MACHINE_NAME%%-python
MAINTAINER Viktor Petersson <vpetersson@screenly.io>

RUN apt-get update && \
    apt-get -y install build-essential git-core net-tools python-netifaces python-simplejson python-imaging python-dev sqlite3 libffi-dev libssl-dev curl matchbox omxplayer uzbl x11-xserver-utils xserver-xorg xorg xserver-xorg-core xserver-xorg-legacy && \
    apt-get clean



# Install Python requirements
ADD requirements.txt /tmp/requirements.txt
RUN curl -s https://bootstrap.pypa.io/get-pip.py | python && \
    pip install --upgrade --force-reinstall -r /tmp/requirements.txt

# Create runtime user
RUN useradd pi

# Install config file and file structure
RUN mkdir -p /home/pi/.screenly /home/pi/screenly /home/pi/screenly_assets /home/pi/.config/uzbl /etc/X11/xdm
COPY ansible/roles/screenly/files/screenly.conf /home/pi/.screenly/screenly.conf
COPY ansible/roles/screenly/files/screenly.db /home/pi/.screenly/screenly.db
COPY ansible/roles/screenly/files/uzbl-config /home/pi/.config/uzbl/config-screenly
COPY ansible/roles/screenly/files/gtkrc-2.0 ~/.gtkrc-2.0
COPY ansible/roles/screenly/files/xdm-config /etc/X11/xdm/xdm-config

#RUN mkdir ~/.fluxbox
#RUN echo "xset s off" > ~/.fluxbox/startup && echo "xserver-command=X -s 0 dpms" >> ~/.fluxbox/startup
RUN echo "#!/bin/bash" > /etc/X11/xinit/xserverrc \
  && echo "" >> /etc/X11/xinit/xserverrc \
  && echo 'exec /usr/bin/X -s 0 dpms -nocursor -nolisten tcp "$@"' >> /etc/X11/xinit/xserverrc

# Copy in code base

COPY . /home/pi/screenly
#COPY .git/ /home/pi/screenly
RUN ls -la /home/pi/screenly
RUN chown -R pi:pi /home/pi


USER pi
WORKDIR /home/pi/screenly

EXPOSE 8080

CMD ["bash", "start.sh"]
